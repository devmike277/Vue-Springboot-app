{"ast":null,"code":"import TaskService from \"../Services/TaskService\";\nexport default {\n  data() {\n    return {\n      tasks: []\n    };\n  },\n\n  created() {\n    this.retrieveTasks();\n  },\n\n  methods: {\n    retrieveTasks() {\n      TaskService.getTasks().then(response => {\n        if (response.status == 200 && Object.keys(response.data).length !== 0) {\n          this.tasks = response.data;\n        }\n      }).catch(error => {\n        console.log(error);\n      }).finally(() => {//Do somethin if it's needed\n      });\n    },\n\n    deleteTask(id) {\n      TaskService.deleteTask(id).then(response => {\n        console.log(response.data);\n      }).catch(error => {\n        console.log(error);\n      }).finally(() => {//Do somethin if it's needed\n      });\n    }\n\n  }\n};","map":{"version":3,"mappings":"AA8CA,OAAOA,WAAP,MAAwB,yBAAxB;AAEA,eAAe;EACbC,IAAI,GAAG;IACL,OAAO;MACLC,KAAK,EAAE;IADF,CAAP;EAGD,CALY;;EAMbC,OAAO,GAAG;IACR,KAAKC,aAAL;EACD,CARY;;EASbC,OAAO,EAAE;IACPD,aAAa,GAAG;MACdJ,WAAW,CAACM,QAAZ,GACGC,IADH,CACSC,QAAD,IAAc;QAClB,IACEA,QAAQ,CAACC,MAAT,IAAmB,GAAnB,IACAC,MAAM,CAACC,IAAP,CAAYH,QAAQ,CAACP,IAArB,EAA2BW,MAA3B,KAAsC,CAFxC,EAGE;UACA,KAAKV,KAAL,GAAaM,QAAQ,CAACP,IAAtB;QACF;MACD,CARH,EASGY,KATH,CASUC,KAAD,IAAW;QAChBC,OAAO,CAACC,GAAR,CAAYF,KAAZ;MACD,CAXH,EAYGG,OAZH,CAYW,MAAM,CACb;MACD,CAdH;IAeD,CAjBM;;IAkBPC,UAAU,CAACC,EAAD,EAAK;MACbnB,WAAW,CAACkB,UAAZ,CAAuBC,EAAvB,EACGZ,IADH,CACSC,QAAD,IAAc;QAClBO,OAAO,CAACC,GAAR,CAAYR,QAAQ,CAACP,IAArB;MACD,CAHH,EAIGY,KAJH,CAIUC,KAAD,IAAW;QAChBC,OAAO,CAACC,GAAR,CAAYF,KAAZ;MACD,CANH,EAOGG,OAPH,CAOW,MAAM,CACb;MACD,CATH;IAUD;;EA7BM;AATI,CAAf","names":["TaskService","data","tasks","created","retrieveTasks","methods","getTasks","then","response","status","Object","keys","length","catch","error","console","log","finally","deleteTask","id"],"sourceRoot":"","sources":["/home/maik/eclipse-workspace/technical-test-frontend/src/components/ListTasks.vue"],"sourcesContent":["<template>\n  <div class=\"container\">\n    <h1 class=\"text-center\">Tasks List</h1>\n    <div class=\"card-body\">\n      <table class=\"table table-striped\">\n        <thead>\n          <tr>\n            <th></th>\n            <th>Task Id</th>\n            <th>Task Name</th>\n            <th>Task Creation</th>\n            <th>Task State</th>\n            <th>Actions</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr v-for=\"task in tasks\" v-bind:key=\"task.id\">\n            <td>\n              <a href=\"#\" name=\"\" id=\"\" class=\"btn btn-success\" role=\"button\"\n                >Detail</a\n              >\n            </td>\n            <td>{{ task.id }}</td>\n            <td>{{ task.name }}</td>\n            <td>{{ task.creationTime }}</td>\n            <td>{{ task.state }}</td>\n            <td>\n              <div class=\"btn-group\" role=\"group\">\n                <button type=\"submit\" class=\"btn btn-success\">Add</button>\n                <button\n                  type=\"submit\"\n                  class=\"btn btn-danger\"\n                  v-on:click=\"deleteTask(task.id)\"\n                >\n                  Delete\n                </button>\n              </div>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  </div>\n</template>\n\n<script>\nimport TaskService from \"../Services/TaskService\";\n\nexport default {\n  data() {\n    return {\n      tasks: [],\n    };\n  },\n  created() {\n    this.retrieveTasks();\n  },\n  methods: {\n    retrieveTasks() {\n      TaskService.getTasks()\n        .then((response) => {\n          if (\n            response.status == 200 &&\n            Object.keys(response.data).length !== 0\n          ) {\n            this.tasks = response.data;\n          }\n        })\n        .catch((error) => {\n          console.log(error);\n        })\n        .finally(() => {\n          //Do somethin if it's needed\n        });\n    },\n    deleteTask(id) {\n      TaskService.deleteTask(id)\n        .then((response) => {\n          console.log(response.data);\n        })\n        .catch((error) => {\n          console.log(error);\n        })\n        .finally(() => {\n          //Do somethin if it's needed\n        });\n    },\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module"}